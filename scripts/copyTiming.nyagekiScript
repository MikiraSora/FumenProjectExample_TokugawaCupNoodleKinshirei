using Caliburn.Micro;
using OngekiFumenEditor.Base;
using OngekiFumenEditor.Base.OngekiObjects;
using OngekiFumenEditor.Modules.FumenVisualEditor.Base;
using OngekiFumenEditor.Modules.FumenVisualEditor.Kernel;
using OngekiFumenEditor.Utils;
using System.Linq;
using System.Collections.Generic;
using System.IO;
using System.Diagnostics;
using OngekiFumenEditor.Modules.EditorScriptExecutor.Scripts;
using OngekiFumenEditor.Parser.DefaultImpl.Ogkr;
//获取编辑器目标对象
var targetEditor = ScriptArgs.TargetEditor;
if (targetEditor is null)
    return;

var lines = File.ReadAllLines(@"C:\Users\mikir\Desktop\音寄谱\拉面\111.c2s");
var cmdArgs = new CommandArgs();

TGrid calcTGrid(int measure, int offset)
{
    return new TGrid(measure, offset * 5);
}

var genList = new List<OngekiObjectBase>();
//Debugger.Break();

var curRollX = 0;
XGrid getRollXGrid()
{
    var xGrid = new XGrid(18 + curRollX * 3, 0);
    curRollX = (curRollX + 1) % 3;
    return xGrid;
}

foreach (var line in lines)
{
    cmdArgs.Line = line;
    TGrid getTGrid() => calcTGrid(cmdArgs.GetData<int>(1), cmdArgs.GetData<int>(2));

    var ongekiObject = default(OngekiObjectBase);
    switch (cmdArgs.GetData<string>(0).ToUpper())
    {
        case "FLK":
        case "AIR":
        case "CHR":
        case "TAP":
            ongekiObject = new Tap()
            {
                TGrid = getTGrid(),
                XGrid = getRollXGrid()
            };
            break;
        case "HLD":
        case "SLC":
        case "SLD":
            var hold = new Hold()
            {
                TGrid = getTGrid(),
                XGrid = getRollXGrid()
            };
            var duration = cmdArgs.GetData<int>(5) * 5;

            hold.SetHold(new HoldEnd()
            {
                TGrid = hold.TGrid + new GridOffset(0, duration),
                XGrid = hold.XGrid.CopyNew()
            });

            ongekiObject = hold;
            break;
        case "AHD":
            var hold2 = new Hold()
            {
                TGrid = getTGrid(),
                XGrid = getRollXGrid()
            };
            var duration2 = cmdArgs.GetData<int>(6) * 5;

            hold2.SetHold(new HoldEnd()
            {
                TGrid = hold2.TGrid + new GridOffset(0, duration2),
                XGrid = hold2.XGrid.CopyNew()
            });

            ongekiObject = hold2;
            break;
        case "MET":
        case "BPM":
        default:
            break;
    }

    if (ongekiObject != null)
        genList.Add(ongekiObject);
}

Log.LogDebug("GOOD");


targetEditor.UndoRedoManager.ExecuteAction(LambdaUndoAction.Create("[脚本]采音抄袭",
    () =>
    {
        targetEditor.Fumen.AddObjects(genList);
    }, () =>
    {
        targetEditor.Fumen.RemoveObjects(genList);
    }));